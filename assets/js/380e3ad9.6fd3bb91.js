"use strict";(self.webpackChunktamalweb=self.webpackChunktamalweb||[]).push([[458],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return d}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),m=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=m(e.components);return r.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),p=m(n),d=o,f=p["".concat(s,".").concat(d)]||p[d]||u[d]||a;return n?r.createElement(f,i(i({ref:t},c),{},{components:n})):r.createElement(f,i({ref:t},c))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=p;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var m=2;m<a;m++)i[m]=n[m];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},8777:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return m},assets:function(){return c},toc:function(){return u},default:function(){return d}});var r=n(7462),o=n(3366),a=(n(7294),n(3905)),i=["components"],l={slug:"deleting-an-item-from-mongodb-mongoose-by-user-permission",title:"Deleting an Item From MongoDB Mongoose By User Permission",authors:"tamalweb",tags:["nodejs"]},s=void 0,m={permalink:"/tamalwebsite/deleting-an-item-from-mongodb-mongoose-by-user-permission",editUrl:"https://github.com/tamalweb/tamalwebsite/tree/master/blog/2018/6-7-deleting-an-item-from-mongodb-mongoose-by-user-permission/index.md",source:"@site/blog/2018/6-7-deleting-an-item-from-mongodb-mongoose-by-user-permission/index.md",title:"Deleting an Item From MongoDB Mongoose By User Permission",description:"The first thing you learn when building a web application is CRUD, Create Read, Update and Destroy. I was learning Node.js to build the backend of my application. The first few lessons were about creating data, and then editing it.",date:"2018-06-07T00:00:00.000Z",formattedDate:"June 7, 2018",tags:[{label:"nodejs",permalink:"/tamalwebsite/tags/nodejs"}],readingTime:2.515,truncated:!0,authors:[{name:"Tamal Web",title:"Frontend Engineer, author of this blog",url:"/about",imageURL:"/img/tamalweb.jpg",key:"tamalweb"}],prevItem:{title:"Why I am not a Fanboy of JavaScript",permalink:"/tamalwebsite/why-i-am-not-a-fanboy-of-javascript"},nextItem:{title:"Things I Learned While Building a Personal Project",permalink:"/tamalwebsite/things-i-learned-while-building-a-personal-project"}},c={authorsImageUrls:[void 0]},u=[],p={toc:u};function d(e){var t=e.components,l=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,r.Z)({},p,l,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"The first thing you learn when building a web application is ",(0,a.kt)("strong",{parentName:"p"},"CRUD"),", Create Read, Update and Destroy. I was learning Node.js to build the backend of my application. The first few lessons were about creating data, and then editing it."),(0,a.kt)("p",null,"In MongoDB mongoose, there are some handy commands for creating, editing items. Let\u2019s say I have a blog post which I created. To edit it, I call the ",(0,a.kt)("inlineCode",{parentName:"p"},".findOneAndUpdate()")," method for editing the existing collection."),(0,a.kt)("p",null,"I soon figured out there must be a ",(0,a.kt)("inlineCode",{parentName:"p"},".removeOne()")," or ",(0,a.kt)("inlineCode",{parentName:"p"},".deleteOne()")," method to delete an item from the database collection."),(0,a.kt)("p",null,"I gave that a try."),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"deleting post",src:n(699).Z})))}d.isMDXComponent=!0},699:function(e,t,n){t.Z=n.p+"assets/images/1-d3a03f7d5cdbfc3ab5669fb895f9db37.png"}}]);